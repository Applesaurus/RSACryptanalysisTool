import datetime, time, threading

class attackRunner:

   def __init__(self):

   def start(self, attackList, timeLimit, memoryLimit, parameters):
      for i in range (0, len(attackList)):
         module = self.loadModule(attackList[i].attackName)

         attackThread = threading.Thread(module.launch(parameters)) #create thread for the attack
         memThread = threading.Thread(self.lauchMemCheck(memoryLimit, attackThread))
         attackThread.start() #start thread
         memThread.start()
         timeStart = datetime.datetime.now()
         timeEnd = timeStart + datetime.time(timeLimit, 0, 0, 0)

         time.sleep(timeEnd - timeStart)
         attackThread.stop()

   def loadModule(self):

   def launchMemCheck(self):
